{
  "openapi": "3.0.0",
  "info": {
    "title": "Budget API Documentation",
    "description": "This is an Budget API. You'll need to create a session before run the tests.",
    "version": "1.0.0",
    "contact": {
      "email": "guilhermealbino33@gmail.com.br"
    }
  },
  "paths": {
    "/sessions": {
      "post": {
        "tags": ["Session"],
        "summary": "Create a session",
        "description": "Login with your user to get a token and run API tests.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "example": {
                  "email": "user_alt@email.com",
                  "password": "1234"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "Not found"
          }
        }
      }
    },
    "/categories": {
      "post": {
        "tags": ["Category"],
        "summary": "Create a category",
        "description": "Create a new category",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "category name sample",
                  "description": "Category description sample"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Category already exists"
          }
        }
      },
      "get": {
        "tags": ["Category"],
        "summary": "List all categories",
        "description": "List all categories",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "post": {
        "tags": ["Product"],
        "summary": "Create a product",
        "description": "Create a new product",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Product already exists"
          }
        }
      },
      "get": {
        "tags": ["Product"],
        "summary": "List all products",
        "description": "List all products",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers": {
      "post": {
        "tags": ["Customer"],
        "summary": "Create a customer",
        "description": "Create a new customer",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "object": {
                    "$ref": "#/components/schemas/Person"
                  }
                },
                "example": {
                  "name": "John Doe",
                  "email": "john@email.com",
                  "cpf": "00.000.000-00",
                  "city_code": "4218707",
                  "address": "Av. Marcolino Martins Cabral",
                  "address_number": "111",
                  "cep": "88.700-000",
                  "phone_number_1": "3626-5555"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Customer already exists"
          }
        }
      },
      "get": {
        "tags": ["Customer"],
        "summary": "List all customers",
        "description": "List all customers",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "object": {
                        "$ref": "#/components/schemas/Person"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No customer not found!"
          }
        }
      }
    },
    "/salesmen": {
      "post": {
        "tags": ["Salesmen"],
        "summary": "Create a salesman",
        "description": "Create a new salesman",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "object": {
                    "$ref": "#/components/schemas/Person"
                  }
                },
                "example": {
                  "name": "John Sales",
                  "email": "john_sales@email.com",
                  "cpf": "88.999.000-00",
                  "city_code": "4218707",
                  "address": "Rua Marechal Teodoro",
                  "address_number": "1000",
                  "cep": "88.700-000",
                  "phone_number_1": "3626-4444"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Salesman already exists"
          }
        }
      },
      "get": {
        "tags": ["Salesmen"],
        "summary": "List all salesmen",
        "description": "List all salesmen",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "object": {
                        "$ref": "#/components/schemas/Person"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No salesmen not found!"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Product": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "category_id": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "value": {
            "type": "number"
          },
          "size": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Person": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "cpf": {
            "type": "string"
          },
          "city_code": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "address_number": {
            "type": "string"
          },
          "cep": {
            "type": "string"
          },
          "phone_number_1": {
            "type": "string"
          }
        }
      }
    }
  },
  "servers": [
    { "url": "http://localhost:3033/api", "description": "API for tests" }
  ]
}
